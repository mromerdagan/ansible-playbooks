"execute pathogen#infect()

syntax on
colorscheme elflord
set mouse=r
set number

set smartindent
set noexpandtab "Do not make tab pressing into spaces
set tabstop=4
set shiftwidth=4
set copyindent
set preserveindent
set colorcolumn=100
set textwidth=100
set showmatch		"show matching brackets
set list
set listchars=tab:\|\ ,trail:Â·
filetype plugin indent on
set hlsearch

" Disable shellcheck don't use 'local' warning
let g:syntastic_sh_shellcheck_args="-e SC2039"
" Disable shellcheck Can't follow non-constant source. Use a directive to specify location
let g:syntastic_sh_shellcheck_args="-e SC1090"
let g:syntastic_sh_shellcheck_args="-e SC1091"
" Disable shellcheck In POSIX sh, 'local' is undefined
let g:syntastic_sh_shellcheck_args="-e SC2039"

if &diff
  syntax off
  set softtabstop=2
  set tabstop=2
  set diffopt+=iwhite
  set hlsearch
  vertical resize 150

  map gs :call IgnWhitespace()<CR>
  function! IgnWhitespace()
    if &diffopt =~ 'iwhite'
      set diffopt-=iwhite
    else
      set diffopt+=iwhite
    endif
  endfunction
endif

" Ctags
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR> " Open tag under cursor in new tab

" Cscope
" use both cscope and ctag for 'ctrl-]', 'ctrl-\', ':ta', and 'vim -t'
set cscopetag

" check cscope for definition of a symbol before checking ctags: set to 1
" if you want the reverse search order.
set csto=0

" add any cscope database in current directory
if filereadable("cscope.out")
    cs add cscope.out
" else add the database pointed to by environment variable
elseif $CSCOPE_DB != ""
    cs add $CSCOPE_DB
endif

" To do the first type of search, hit 'CTRL-\', followed by one of the
" cscope search types above (s,g,c,t,e,f,i,d).  The result of your cscope
" search will be displayed in the current window.  You can use CTRL-T to
" go back to where you were before the search.
"

nmap <C-\>s :cs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>g :cs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>c :cs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>t :cs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>e :cs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-\>d :cs find d <C-R>=expand("<cword>")<CR><CR>


" Using 'CTRL-spacebar' (intepreted as CTRL-@ by vim) then a search type
" makes the vim window split horizontally, with search result displayed in
" the new window.
"
" (Note: earlier versions of vim may not have the :scs command, but it
" can be simulated roughly via:
"    nmap <C-@>s <C-W><C-S> :cs find s <C-R>=expand("<cword>")<CR><CR>

nmap <C-@>s :scs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-@>g :scs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-@>c :scs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-@>t :scs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-@>e :scs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-@>f :scs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-@>i :scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-@>d :scs find d <C-R>=expand("<cword>")<CR><CR>

" Always show statusline
set laststatus=2
"let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='fairyfloss'

" netrw config- netrw is file explorer (built in)
" Open with :Vexplore, :Texplore :Sexplore
let g:netrw_banner = 0 " No banner
let g:netrw_browse_split = 3 " Open files in new tab
let g:netrw_liststyle = 3 " Wide mode (can be changed dynamically with 'i')
let g:netrw_winsize = 21 " Limit size to 21 chars

"YouCompleteme customization

let g:ycm_confirm_extra_conf = 0
"let g:ycm_global_ycm_extra_conf = '~/Downloads/ycm_extra_conf.py'
set completeopt-=preview                "disable preview window

"Add fancy hightlights
highlight hl1 ctermfg=black ctermbg=magenta guifg=black guibg=IndianRed
highlight hl2 ctermfg=white ctermbg=DarkGreen guifg=white guibg=DarkGreen
highlight hl3 ctermfg=black ctermbg=cyan guifg=black guibg=DeepSkyBlue
highlight hl4 ctermfg=black ctermbg=green guifg=black guibg=chartreuse
highlight hl5 ctermfg=white ctermbg=DarkBlue guifg=white guibg=firebrick
